// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: SchedulingInput.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchedDifferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added   []*SchedulingInput `protobuf:"bytes,1,rep,name=added,proto3" json:"added,omitempty"`
	Removed []*SchedulingInput `protobuf:"bytes,2,rep,name=removed,proto3" json:"removed,omitempty"`
	Changed []*SchedulingInput `protobuf:"bytes,3,rep,name=changed,proto3" json:"changed,omitempty"`
}

func (x *BatchedDifferences) Reset() {
	*x = BatchedDifferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchedDifferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedDifferences) ProtoMessage() {}

func (x *BatchedDifferences) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedDifferences.ProtoReflect.Descriptor instead.
func (*BatchedDifferences) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{0}
}

func (x *BatchedDifferences) GetAdded() []*SchedulingInput {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *BatchedDifferences) GetRemoved() []*SchedulingInput {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *BatchedDifferences) GetChanged() []*SchedulingInput {
	if x != nil {
		return x.Changed
	}
	return nil
}

// Anything in bytes are the self-describing wire format provided by K8s
type SchedulingInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp                    string                    `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PendingpodData               []*ReducedPod             `protobuf:"bytes,2,rep,name=pendingpod_data,json=pendingpodData,proto3" json:"pendingpod_data,omitempty"`
	StatenodesData               []*StateNodeWithPods      `protobuf:"bytes,3,rep,name=statenodes_data,json=statenodesData,proto3" json:"statenodes_data,omitempty"`
	BindingsData                 *Bindings                 `protobuf:"bytes,4,opt,name=bindings_data,json=bindingsData,proto3" json:"bindings_data,omitempty"`
	InstancetypesData            []*InstanceType           `protobuf:"bytes,5,rep,name=instancetypes_data,json=instancetypesData,proto3" json:"instancetypes_data,omitempty"`
	NodepoolstoinstancetypesData *NodePoolsToInstanceTypes `protobuf:"bytes,6,opt,name=nodepoolstoinstancetypes_data,json=nodepoolstoinstancetypesData,proto3" json:"nodepoolstoinstancetypes_data,omitempty"`
	TopologyData                 []byte                    `protobuf:"bytes,7,opt,name=topology_data,json=topologyData,proto3,oneof" json:"topology_data,omitempty"`
	DaemonsetpodsData            []byte                    `protobuf:"bytes,8,opt,name=daemonsetpods_data,json=daemonsetpodsData,proto3,oneof" json:"daemonsetpods_data,omitempty"`
	PvlistData                   []byte                    `protobuf:"bytes,9,opt,name=pvlist_data,json=pvlistData,proto3,oneof" json:"pvlist_data,omitempty"`
	PvclistData                  []byte                    `protobuf:"bytes,10,opt,name=pvclist_data,json=pvclistData,proto3,oneof" json:"pvclist_data,omitempty"`
	ScheduledpodlistData         []byte                    `protobuf:"bytes,11,opt,name=scheduledpodlist_data,json=scheduledpodlistData,proto3,oneof" json:"scheduledpodlist_data,omitempty"`
}

func (x *SchedulingInput) Reset() {
	*x = SchedulingInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingInput) ProtoMessage() {}

func (x *SchedulingInput) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingInput.ProtoReflect.Descriptor instead.
func (*SchedulingInput) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{1}
}

func (x *SchedulingInput) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SchedulingInput) GetPendingpodData() []*ReducedPod {
	if x != nil {
		return x.PendingpodData
	}
	return nil
}

func (x *SchedulingInput) GetStatenodesData() []*StateNodeWithPods {
	if x != nil {
		return x.StatenodesData
	}
	return nil
}

func (x *SchedulingInput) GetBindingsData() *Bindings {
	if x != nil {
		return x.BindingsData
	}
	return nil
}

func (x *SchedulingInput) GetInstancetypesData() []*InstanceType {
	if x != nil {
		return x.InstancetypesData
	}
	return nil
}

func (x *SchedulingInput) GetNodepoolstoinstancetypesData() *NodePoolsToInstanceTypes {
	if x != nil {
		return x.NodepoolstoinstancetypesData
	}
	return nil
}

func (x *SchedulingInput) GetTopologyData() []byte {
	if x != nil {
		return x.TopologyData
	}
	return nil
}

func (x *SchedulingInput) GetDaemonsetpodsData() []byte {
	if x != nil {
		return x.DaemonsetpodsData
	}
	return nil
}

func (x *SchedulingInput) GetPvlistData() []byte {
	if x != nil {
		return x.PvlistData
	}
	return nil
}

func (x *SchedulingInput) GetPvclistData() []byte {
	if x != nil {
		return x.PvclistData
	}
	return nil
}

func (x *SchedulingInput) GetScheduledpodlistData() []byte {
	if x != nil {
		return x.ScheduledpodlistData
	}
	return nil
}

type ReducedPod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace  string                     `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Uid        string                     `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Phase      string                     `protobuf:"bytes,4,opt,name=phase,proto3" json:"phase,omitempty"`
	Spec       []byte                     `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	Conditions []*ReducedPod_PodCondition `protobuf:"bytes,6,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *ReducedPod) Reset() {
	*x = ReducedPod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedPod) ProtoMessage() {}

func (x *ReducedPod) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedPod.ProtoReflect.Descriptor instead.
func (*ReducedPod) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{2}
}

func (x *ReducedPod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReducedPod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReducedPod) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReducedPod) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *ReducedPod) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ReducedPod) GetConditions() []*ReducedPod_PodCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// A stateNode with the its associated Pods on it.
type StateNodeWithPods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node      []byte        `protobuf:"bytes,1,opt,name=node,proto3,oneof" json:"node,omitempty"`
	NodeClaim []byte        `protobuf:"bytes,2,opt,name=nodeClaim,proto3,oneof" json:"nodeClaim,omitempty"`
	Pods      []*ReducedPod `protobuf:"bytes,3,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *StateNodeWithPods) Reset() {
	*x = StateNodeWithPods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateNodeWithPods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateNodeWithPods) ProtoMessage() {}

func (x *StateNodeWithPods) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateNodeWithPods.ProtoReflect.Descriptor instead.
func (*StateNodeWithPods) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{3}
}

func (x *StateNodeWithPods) GetNode() []byte {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *StateNodeWithPods) GetNodeClaim() []byte {
	if x != nil {
		return x.NodeClaim
	}
	return nil
}

func (x *StateNodeWithPods) GetPods() []*ReducedPod {
	if x != nil {
		return x.Pods
	}
	return nil
}

// Bindings represents the mapping between a Pod and the node it's bound to.
type Bindings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binding []*Bindings_Binding `protobuf:"bytes,1,rep,name=binding,proto3" json:"binding,omitempty"`
}

func (x *Bindings) Reset() {
	*x = Bindings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bindings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bindings) ProtoMessage() {}

func (x *Bindings) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bindings.ProtoReflect.Descriptor instead.
func (*Bindings) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{4}
}

func (x *Bindings) GetBinding() []*Bindings_Binding {
	if x != nil {
		return x.Binding
	}
	return nil
}

type InstanceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Requirements []*InstanceType_Requirement `protobuf:"bytes,2,rep,name=requirements,proto3" json:"requirements,omitempty"`
	Offerings    []*InstanceType_Offering    `protobuf:"bytes,3,rep,name=offerings,proto3" json:"offerings,omitempty"`
	Capacity     *InstanceType_ResourceList  `protobuf:"bytes,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Overhead     *InstanceType_Overhead      `protobuf:"bytes,5,opt,name=overhead,proto3" json:"overhead,omitempty"`
}

func (x *InstanceType) Reset() {
	*x = InstanceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType) ProtoMessage() {}

func (x *InstanceType) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceType.ProtoReflect.Descriptor instead.
func (*InstanceType) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{5}
}

func (x *InstanceType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstanceType) GetRequirements() []*InstanceType_Requirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *InstanceType) GetOfferings() []*InstanceType_Offering {
	if x != nil {
		return x.Offerings
	}
	return nil
}

func (x *InstanceType) GetCapacity() *InstanceType_ResourceList {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *InstanceType) GetOverhead() *InstanceType_Overhead {
	if x != nil {
		return x.Overhead
	}
	return nil
}

// NodepoolsToInstanceTypes represents the mapping from each Nodepool to its set of InstanceTypes by name
type NodePoolsToInstanceTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodepoolstoinstancetypes []*NodePoolsToInstanceTypes_NodePoolToInstanceTypes `protobuf:"bytes,1,rep,name=nodepoolstoinstancetypes,proto3" json:"nodepoolstoinstancetypes,omitempty"`
}

func (x *NodePoolsToInstanceTypes) Reset() {
	*x = NodePoolsToInstanceTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePoolsToInstanceTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePoolsToInstanceTypes) ProtoMessage() {}

func (x *NodePoolsToInstanceTypes) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePoolsToInstanceTypes.ProtoReflect.Descriptor instead.
func (*NodePoolsToInstanceTypes) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{6}
}

func (x *NodePoolsToInstanceTypes) GetNodepoolstoinstancetypes() []*NodePoolsToInstanceTypes_NodePoolToInstanceTypes {
	if x != nil {
		return x.Nodepoolstoinstancetypes
	}
	return nil
}

type SchedulingMetadataMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*SchedulingMetadataMap_MappingEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *SchedulingMetadataMap) Reset() {
	*x = SchedulingMetadataMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingMetadataMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingMetadataMap) ProtoMessage() {}

func (x *SchedulingMetadataMap) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingMetadataMap.ProtoReflect.Descriptor instead.
func (*SchedulingMetadataMap) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{7}
}

func (x *SchedulingMetadataMap) GetEntries() []*SchedulingMetadataMap_MappingEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ReducedPod_PodCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason  string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReducedPod_PodCondition) Reset() {
	*x = ReducedPod_PodCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedPod_PodCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedPod_PodCondition) ProtoMessage() {}

func (x *ReducedPod_PodCondition) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedPod_PodCondition.ProtoReflect.Descriptor instead.
func (*ReducedPod_PodCondition) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ReducedPod_PodCondition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReducedPod_PodCondition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReducedPod_PodCondition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ReducedPod_PodCondition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Bindings_Binding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodNamespacedName *Bindings_Binding_NamespacedName `protobuf:"bytes,1,opt,name=pod_namespaced_name,json=podNamespacedName,proto3" json:"pod_namespaced_name,omitempty"`
	NodeName          string                           `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
}

func (x *Bindings_Binding) Reset() {
	*x = Bindings_Binding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bindings_Binding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bindings_Binding) ProtoMessage() {}

func (x *Bindings_Binding) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bindings_Binding.ProtoReflect.Descriptor instead.
func (*Bindings_Binding) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Bindings_Binding) GetPodNamespacedName() *Bindings_Binding_NamespacedName {
	if x != nil {
		return x.PodNamespacedName
	}
	return nil
}

func (x *Bindings_Binding) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type Bindings_Binding_NamespacedName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Bindings_Binding_NamespacedName) Reset() {
	*x = Bindings_Binding_NamespacedName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bindings_Binding_NamespacedName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bindings_Binding_NamespacedName) ProtoMessage() {}

func (x *Bindings_Binding_NamespacedName) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bindings_Binding_NamespacedName.ProtoReflect.Descriptor instead.
func (*Bindings_Binding_NamespacedName) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *Bindings_Binding_NamespacedName) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Bindings_Binding_NamespacedName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type InstanceType_Requirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Nodeselectoroperator string   `protobuf:"bytes,2,opt,name=nodeselectoroperator,proto3" json:"nodeselectoroperator,omitempty"`
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	Minvalues            *int64   `protobuf:"varint,4,opt,name=minvalues,proto3,oneof" json:"minvalues,omitempty"`
}

func (x *InstanceType_Requirement) Reset() {
	*x = InstanceType_Requirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceType_Requirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType_Requirement) ProtoMessage() {}

func (x *InstanceType_Requirement) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceType_Requirement.ProtoReflect.Descriptor instead.
func (*InstanceType_Requirement) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{5, 0}
}

func (x *InstanceType_Requirement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InstanceType_Requirement) GetNodeselectoroperator() string {
	if x != nil {
		return x.Nodeselectoroperator
	}
	return ""
}

func (x *InstanceType_Requirement) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *InstanceType_Requirement) GetMinvalues() int64 {
	if x != nil && x.Minvalues != nil {
		return *x.Minvalues
	}
	return 0
}

type InstanceType_Offering struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requirements []*InstanceType_Requirement `protobuf:"bytes,1,rep,name=requirements,proto3" json:"requirements,omitempty"`
	Price        float64                     `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Available    bool                        `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *InstanceType_Offering) Reset() {
	*x = InstanceType_Offering{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceType_Offering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType_Offering) ProtoMessage() {}

func (x *InstanceType_Offering) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceType_Offering.ProtoReflect.Descriptor instead.
func (*InstanceType_Offering) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{5, 1}
}

func (x *InstanceType_Offering) GetRequirements() []*InstanceType_Requirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *InstanceType_Offering) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *InstanceType_Offering) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type InstanceType_ResourceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*InstanceType_ResourceQuantity `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *InstanceType_ResourceList) Reset() {
	*x = InstanceType_ResourceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceType_ResourceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType_ResourceList) ProtoMessage() {}

func (x *InstanceType_ResourceList) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceType_ResourceList.ProtoReflect.Descriptor instead.
func (*InstanceType_ResourceList) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{5, 2}
}

func (x *InstanceType_ResourceList) GetResources() []*InstanceType_ResourceQuantity {
	if x != nil {
		return x.Resources
	}
	return nil
}

type InstanceType_Overhead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kubereserved      *InstanceType_ResourceList `protobuf:"bytes,1,opt,name=kubereserved,proto3" json:"kubereserved,omitempty"`
	Systemreserved    *InstanceType_ResourceList `protobuf:"bytes,2,opt,name=systemreserved,proto3" json:"systemreserved,omitempty"`
	Evictionthreshold *InstanceType_ResourceList `protobuf:"bytes,3,opt,name=evictionthreshold,proto3" json:"evictionthreshold,omitempty"`
}

func (x *InstanceType_Overhead) Reset() {
	*x = InstanceType_Overhead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceType_Overhead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType_Overhead) ProtoMessage() {}

func (x *InstanceType_Overhead) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceType_Overhead.ProtoReflect.Descriptor instead.
func (*InstanceType_Overhead) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{5, 3}
}

func (x *InstanceType_Overhead) GetKubereserved() *InstanceType_ResourceList {
	if x != nil {
		return x.Kubereserved
	}
	return nil
}

func (x *InstanceType_Overhead) GetSystemreserved() *InstanceType_ResourceList {
	if x != nil {
		return x.Systemreserved
	}
	return nil
}

func (x *InstanceType_Overhead) GetEvictionthreshold() *InstanceType_ResourceList {
	if x != nil {
		return x.Evictionthreshold
	}
	return nil
}

type InstanceType_ResourceQuantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	Quantity     []byte `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *InstanceType_ResourceQuantity) Reset() {
	*x = InstanceType_ResourceQuantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceType_ResourceQuantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType_ResourceQuantity) ProtoMessage() {}

func (x *InstanceType_ResourceQuantity) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceType_ResourceQuantity.ProtoReflect.Descriptor instead.
func (*InstanceType_ResourceQuantity) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{5, 4}
}

func (x *InstanceType_ResourceQuantity) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *InstanceType_ResourceQuantity) GetQuantity() []byte {
	if x != nil {
		return x.Quantity
	}
	return nil
}

type InstanceType_Quantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*InstanceType_Quantity_I
	//	*InstanceType_Quantity_D
	Value isInstanceType_Quantity_Value `protobuf_oneof:"value"`
}

func (x *InstanceType_Quantity) Reset() {
	*x = InstanceType_Quantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceType_Quantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceType_Quantity) ProtoMessage() {}

func (x *InstanceType_Quantity) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceType_Quantity.ProtoReflect.Descriptor instead.
func (*InstanceType_Quantity) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{5, 5}
}

func (m *InstanceType_Quantity) GetValue() isInstanceType_Quantity_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *InstanceType_Quantity) GetI() int64 {
	if x, ok := x.GetValue().(*InstanceType_Quantity_I); ok {
		return x.I
	}
	return 0
}

func (x *InstanceType_Quantity) GetD() string {
	if x, ok := x.GetValue().(*InstanceType_Quantity_D); ok {
		return x.D
	}
	return ""
}

type isInstanceType_Quantity_Value interface {
	isInstanceType_Quantity_Value()
}

type InstanceType_Quantity_I struct {
	I int64 `protobuf:"varint,1,opt,name=i,proto3,oneof"` // for int64 scaled form
}

type InstanceType_Quantity_D struct {
	D string `protobuf:"bytes,2,opt,name=d,proto3,oneof"` // for inf.Dec form
}

func (*InstanceType_Quantity_I) isInstanceType_Quantity_Value() {}

func (*InstanceType_Quantity_D) isInstanceType_Quantity_Value() {}

type NodePoolsToInstanceTypes_NodePoolToInstanceTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodepool         string   `protobuf:"bytes,1,opt,name=nodepool,proto3" json:"nodepool,omitempty"`
	InstancetypeName []string `protobuf:"bytes,2,rep,name=instancetype_name,json=instancetypeName,proto3" json:"instancetype_name,omitempty"`
}

func (x *NodePoolsToInstanceTypes_NodePoolToInstanceTypes) Reset() {
	*x = NodePoolsToInstanceTypes_NodePoolToInstanceTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePoolsToInstanceTypes_NodePoolToInstanceTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePoolsToInstanceTypes_NodePoolToInstanceTypes) ProtoMessage() {}

func (x *NodePoolsToInstanceTypes_NodePoolToInstanceTypes) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePoolsToInstanceTypes_NodePoolToInstanceTypes.ProtoReflect.Descriptor instead.
func (*NodePoolsToInstanceTypes_NodePoolToInstanceTypes) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{6, 0}
}

func (x *NodePoolsToInstanceTypes_NodePoolToInstanceTypes) GetNodepool() string {
	if x != nil {
		return x.Nodepool
	}
	return ""
}

func (x *NodePoolsToInstanceTypes_NodePoolToInstanceTypes) GetInstancetypeName() []string {
	if x != nil {
		return x.InstancetypeName
	}
	return nil
}

type SchedulingMetadataMap_MappingEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *SchedulingMetadataMap_MappingEntry) Reset() {
	*x = SchedulingMetadataMap_MappingEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SchedulingInput_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingMetadataMap_MappingEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingMetadataMap_MappingEntry) ProtoMessage() {}

func (x *SchedulingMetadataMap_MappingEntry) ProtoReflect() protoreflect.Message {
	mi := &file_SchedulingInput_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingMetadataMap_MappingEntry.ProtoReflect.Descriptor instead.
func (*SchedulingMetadataMap_MappingEntry) Descriptor() ([]byte, []int) {
	return file_SchedulingInput_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SchedulingMetadataMap_MappingEntry) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SchedulingMetadataMap_MappingEntry) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_SchedulingInput_proto protoreflect.FileDescriptor

var file_SchedulingInput_proto_rawDesc = []byte{
	0x0a, 0x15, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0xba,
	0x05, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x34, 0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x52, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70,
	0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50,
	0x6f, 0x64, 0x73, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0d, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x5e, 0x0a, 0x1d, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x74, 0x6f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x1c, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x74, 0x6f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x28, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x12, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x70, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x11, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x73, 0x65, 0x74, 0x70, 0x6f, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x70, 0x76, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x76, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x76, 0x63, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x0b, 0x70,
	0x76, 0x63, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a,
	0x15, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x70, 0x6f, 0x64, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52, 0x14,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x70, 0x6f, 0x64, 0x6c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x70, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x76, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x76, 0x63, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x70,
	0x6f, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x02, 0x0a, 0x0a,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x2e, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x6c, 0x0a, 0x0c, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x87, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x52, 0x04, 0x70,
	0x6f, 0x64, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0xf6, 0x01, 0x0a, 0x08, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x1a, 0xbc, 0x01, 0x0a, 0x07, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x50, 0x0a, 0x13, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x11, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0x42, 0x0a, 0x0e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xd4, 0x07, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x36, 0x0a,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x52,
	0x08, 0x6f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x1a, 0x9c, 0x01, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x69,
	0x6e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x7d, 0x0a, 0x08, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x4c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0xd8, 0x01, 0x0a, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65,
	0x61, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x65, 0x76, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x65,
	0x76, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x1a, 0x53, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x33, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x0e, 0x0a, 0x01, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x01,
	0x69, 0x12, 0x0e, 0x0a, 0x01, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x18, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x18, 0x6e, 0x6f, 0x64, 0x65, 0x70,
	0x6f, 0x6f, 0x6c, 0x73, 0x74, 0x6f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x6f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x18, 0x6e, 0x6f,
	0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x74, 0x6f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x62, 0x0a, 0x17, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x2b, 0x0a,
	0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x4d, 0x61, 0x70, 0x12, 0x3d, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x2e, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0x44, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x31, 0x5a, 0x2f, 0x73, 0x69, 0x67,
	0x73, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x73, 0x2f, 0x6f, 0x72, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SchedulingInput_proto_rawDescOnce sync.Once
	file_SchedulingInput_proto_rawDescData = file_SchedulingInput_proto_rawDesc
)

func file_SchedulingInput_proto_rawDescGZIP() []byte {
	file_SchedulingInput_proto_rawDescOnce.Do(func() {
		file_SchedulingInput_proto_rawDescData = protoimpl.X.CompressGZIP(file_SchedulingInput_proto_rawDescData)
	})
	return file_SchedulingInput_proto_rawDescData
}

var file_SchedulingInput_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_SchedulingInput_proto_goTypes = []any{
	(*BatchedDifferences)(nil),                               // 0: BatchedDifferences
	(*SchedulingInput)(nil),                                  // 1: SchedulingInput
	(*ReducedPod)(nil),                                       // 2: ReducedPod
	(*StateNodeWithPods)(nil),                                // 3: StateNodeWithPods
	(*Bindings)(nil),                                         // 4: Bindings
	(*InstanceType)(nil),                                     // 5: InstanceType
	(*NodePoolsToInstanceTypes)(nil),                         // 6: NodePoolsToInstanceTypes
	(*SchedulingMetadataMap)(nil),                            // 7: SchedulingMetadataMap
	(*ReducedPod_PodCondition)(nil),                          // 8: ReducedPod.PodCondition
	(*Bindings_Binding)(nil),                                 // 9: Bindings.Binding
	(*Bindings_Binding_NamespacedName)(nil),                  // 10: Bindings.Binding.NamespacedName
	(*InstanceType_Requirement)(nil),                         // 11: InstanceType.Requirement
	(*InstanceType_Offering)(nil),                            // 12: InstanceType.Offering
	(*InstanceType_ResourceList)(nil),                        // 13: InstanceType.ResourceList
	(*InstanceType_Overhead)(nil),                            // 14: InstanceType.Overhead
	(*InstanceType_ResourceQuantity)(nil),                    // 15: InstanceType.ResourceQuantity
	(*InstanceType_Quantity)(nil),                            // 16: InstanceType.Quantity
	(*NodePoolsToInstanceTypes_NodePoolToInstanceTypes)(nil), // 17: NodePoolsToInstanceTypes.NodePoolToInstanceTypes
	(*SchedulingMetadataMap_MappingEntry)(nil),               // 18: SchedulingMetadataMap.MappingEntry
}
var file_SchedulingInput_proto_depIdxs = []int32{
	1,  // 0: BatchedDifferences.added:type_name -> SchedulingInput
	1,  // 1: BatchedDifferences.removed:type_name -> SchedulingInput
	1,  // 2: BatchedDifferences.changed:type_name -> SchedulingInput
	2,  // 3: SchedulingInput.pendingpod_data:type_name -> ReducedPod
	3,  // 4: SchedulingInput.statenodes_data:type_name -> StateNodeWithPods
	4,  // 5: SchedulingInput.bindings_data:type_name -> Bindings
	5,  // 6: SchedulingInput.instancetypes_data:type_name -> InstanceType
	6,  // 7: SchedulingInput.nodepoolstoinstancetypes_data:type_name -> NodePoolsToInstanceTypes
	8,  // 8: ReducedPod.conditions:type_name -> ReducedPod.PodCondition
	2,  // 9: StateNodeWithPods.pods:type_name -> ReducedPod
	9,  // 10: Bindings.binding:type_name -> Bindings.Binding
	11, // 11: InstanceType.requirements:type_name -> InstanceType.Requirement
	12, // 12: InstanceType.offerings:type_name -> InstanceType.Offering
	13, // 13: InstanceType.capacity:type_name -> InstanceType.ResourceList
	14, // 14: InstanceType.overhead:type_name -> InstanceType.Overhead
	17, // 15: NodePoolsToInstanceTypes.nodepoolstoinstancetypes:type_name -> NodePoolsToInstanceTypes.NodePoolToInstanceTypes
	18, // 16: SchedulingMetadataMap.entries:type_name -> SchedulingMetadataMap.MappingEntry
	10, // 17: Bindings.Binding.pod_namespaced_name:type_name -> Bindings.Binding.NamespacedName
	11, // 18: InstanceType.Offering.requirements:type_name -> InstanceType.Requirement
	15, // 19: InstanceType.ResourceList.resources:type_name -> InstanceType.ResourceQuantity
	13, // 20: InstanceType.Overhead.kubereserved:type_name -> InstanceType.ResourceList
	13, // 21: InstanceType.Overhead.systemreserved:type_name -> InstanceType.ResourceList
	13, // 22: InstanceType.Overhead.evictionthreshold:type_name -> InstanceType.ResourceList
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_SchedulingInput_proto_init() }
func file_SchedulingInput_proto_init() {
	if File_SchedulingInput_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SchedulingInput_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BatchedDifferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SchedulingInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReducedPod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*StateNodeWithPods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Bindings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*NodePoolsToInstanceTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SchedulingMetadataMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReducedPod_PodCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Bindings_Binding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Bindings_Binding_NamespacedName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceType_Requirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceType_Offering); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceType_ResourceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceType_Overhead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceType_ResourceQuantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceType_Quantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*NodePoolsToInstanceTypes_NodePoolToInstanceTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SchedulingInput_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SchedulingMetadataMap_MappingEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_SchedulingInput_proto_msgTypes[1].OneofWrappers = []any{}
	file_SchedulingInput_proto_msgTypes[3].OneofWrappers = []any{}
	file_SchedulingInput_proto_msgTypes[11].OneofWrappers = []any{}
	file_SchedulingInput_proto_msgTypes[16].OneofWrappers = []any{
		(*InstanceType_Quantity_I)(nil),
		(*InstanceType_Quantity_D)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SchedulingInput_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SchedulingInput_proto_goTypes,
		DependencyIndexes: file_SchedulingInput_proto_depIdxs,
		MessageInfos:      file_SchedulingInput_proto_msgTypes,
	}.Build()
	File_SchedulingInput_proto = out.File
	file_SchedulingInput_proto_rawDesc = nil
	file_SchedulingInput_proto_goTypes = nil
	file_SchedulingInput_proto_depIdxs = nil
}
